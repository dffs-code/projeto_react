{"version":3,"sources":["img/github_api.PNG","img/tasklist.png","img/calculator.png","components/Header.js","components/Title.js","components/Sobre.js","components/Portfolio.js","components/Contato.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","Title","Sobre","id","src","Portfolio","target","api","alt","tl","calc","Contato","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,6PCsB5BC,MAnBf,WACI,OACI,oCACA,yBAAKC,UAAU,QACX,4BACR,4BACC,uBAAGC,KAAK,KACP,uBAAGD,UAAU,kBAGH,4BAAI,uBAAGC,KAAK,UAAR,UACJ,4BAAI,uBAAGA,KAAK,cAAR,iBACJ,4BAAI,uBAAGA,KAAK,YAAR,gB,MCFLC,MAVf,WACI,OACI,oCACA,yBAAKF,UAAU,SACX,wBAAIA,UAAU,cAAd,uB,MCeGG,MAnBf,WACI,OACI,oCACA,6BAASH,UAAU,QAAQI,GAAG,SAC1B,qCACA,yBAAKJ,UAAU,WACX,4BAAQA,UAAU,UACd,yBAAKK,IAAI,4GAEb,kQACA,qQAEA,6G,sDCqBDC,MA9Bf,WACI,OACI,oCACA,6BAASN,UAAU,YAAYI,GAAG,aAClC,4CACI,yBAAKJ,UAAU,QACX,gCACI,uBAAGC,KAAK,6CAA6CM,OAAO,UACxD,yBAAKP,UAAU,gBAAgBK,IAAKG,IAAKC,IAAI,eAC7C,yDAGR,gCACI,uBAAGR,KAAK,0CAA0CM,OAAO,UACrD,yBAAKP,UAAU,gBAAgBK,IAAKK,IAAID,IAAI,cAC5C,kDAGR,gCACI,uBAAGR,KAAK,0CAA0CM,OAAO,UACrD,yBAAKP,UAAU,gBAAgBK,IAAKM,IAAMF,IAAI,gBAC9C,yD,MCATG,MAxBf,WACI,OACI,oCACC,6BAASZ,UAAU,UAAUI,GAAG,WACpC,uCACG,yBAAKJ,UAAU,cACd,uBAAGC,KAAK,8BAA8BM,OAAO,UACvC,uBAAGP,UAAU,mBAEjB,uBAAGC,KAAK,+BAA+BM,OAAO,UACrD,uBAAGP,UAAU,sBAER,uBAAGC,KAAK,gDAAgDM,OAAO,UACpE,uBAAGP,UAAU,qBAEN,uBAAGC,KAAK,oCAAoCM,OAAO,UAC1D,uBAAGP,UAAU,yBCEFa,MAZf,WACE,OACE,oCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6d549295.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github_api.95a02ef3.PNG\";","module.exports = __webpack_public_path__ + \"static/media/tasklist.1356df22.png\";","module.exports = __webpack_public_path__ + \"static/media/calculator.e035dc20.png\";","import React from 'react';\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <>\r\n        <nav className=\"menu\">\r\n            <ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a href=\"#\">\r\n\t\t\t\t\t\t<i className=\"fas fa-home\"></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n                <li><a href=\"#sobre\">Sobre</a></li>\r\n                <li><a href=\"#portfolio\">Portfólio</a></li>\r\n                <li><a href=\"#contato\">Contato</a></li>\r\n            </ul>\r\n        </nav>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Title.css'\r\n\r\nfunction Title() {\r\n    return (\r\n        <>\r\n        <div className=\"title\">\r\n            <h1 className=\"site-title\">Daniel Formigoni</h1>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport './Sobre.css'\r\n\r\nfunction Sobre() {\r\n    return (\r\n        <>\r\n        <section className=\"sobre\" id=\"sobre\">\r\n            <h2>Sobre</h2>\r\n            <div className=\"content\">\r\n                <figure className=\"avatar\">\r\n                    <img src=\"https://avatars1.githubusercontent.com/u/52416634?s=460&u=698704804f4dd74b03838822ad1ac9520f0d4765&v=4\"></img>\r\n                </figure>\r\n                <p>Amante da Tecnologia e entusiasta do Design e User Experience. Técnico em informática pela Etec Dr. Emílio Hernandez Aguilar e estudante de Análise e Desenvolvimento de Sistemas no Instituto Federal de São Paulo </p>\r\n                <p>Atualmente me aprofundando nos conhecimentos em HTML, CSS e Javascript, em busca de maior domínio em FrontEnd. Abaixo podem ser encontrados alguns exemplos de projetos acadêmicos e seus respectivos repositórios no Github.\r\n                </p>\r\n                <p>Em constante evolução e estudo em diversas áreas de conhecimento.</p>\r\n            </div>\r\n        </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Sobre;","import React from 'react';\r\nimport api from '../img/github_api.PNG';\r\nimport tl from '../img/tasklist.png';\r\nimport calc from '../img/calculator.png';\r\nimport './Portfolio.css'\r\n\r\nfunction Portfolio() {\r\n    return (\r\n        <>\r\n        <section className=\"portfolio\" id=\"portfolio\">\r\n        <h2>Portfólio</h2>\r\n            <div className=\"grid\">\r\n                <figure>\r\n                    <a href=\"https://dffs-code.github.io/githubUserAPI/\" target=\"_blank\">\r\n                        <img className=\"img-portfolio\" src={api} alt=\"Github API\"></img>\r\n                        <figcaption>Github User API</figcaption>\r\n                    </a>\r\n                </figure>\r\n                <figure>\r\n                    <a href=\"https://dffs-code.github.io/taskListJS/\" target=\"_blank\">\r\n                        <img className=\"img-portfolio\" src={tl} alt=\"Task List\"></img>\r\n                        <figcaption>TaskList</figcaption>\r\n                    </a>\r\n                </figure>\r\n                <figure>\r\n                    <a href=\"https://dffs-code.github.io/Calculator/\" target=\"_blank\">\r\n                        <img className=\"img-portfolio\" src={calc} alt=\"Calculadora\"></img>\r\n                        <figcaption>Calculadora</figcaption>\r\n                    </a>\r\n                </figure>\r\n                </div>\r\n        </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\r\nimport './Contato.css'\r\n\r\nfunction Contato() {\r\n    return (\r\n        <>\r\n         <section className=\"contato\" id=\"contato\">\r\n    \t<h2>Contato</h2>\r\n        <div className=\"grid icons\">\r\n        \t<a href=\"http://github.com/dffs-code\" target=\"_blank\">\r\n              \t<i className=\"fab fa-github\"></i>\r\n          \t</a>\r\n          \t<a href=\"http://instagram.com/_.danif\" target=\"_blank\">\r\n\t\t\t\t<i className=\"fab fa-instagram\"></i>\r\n\t        </a>\r\n\t        <a href=\"https://www.linkedin.com/in/daniel-formigoni/\" target=\"_blank\">\r\n\t\t\t\t<i className=\"fab fa-linkedin\"></i>\r\n\t\t\t</a>\r\n          \t<a href=\"mailto:formigoni.soares@gmail.com\" target=\"_blank\">\r\n\t\t\t\t<i className=\"fas fa-envelope\"></i>\r\n\t\t\t</a>\r\n        </div>\r\n    </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Contato;","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport Title from './components/Title'\nimport Sobre from './components/Sobre'\nimport Portfolio from './components/Portfolio';\nimport Contato from './components/Contato'\n\nfunction App() {\n  return (\n    <>\n    <Header />\n    <Title />\n    <Sobre />\n    <Portfolio />\n    <Contato />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}